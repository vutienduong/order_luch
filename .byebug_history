c
current_user
c
n
c
n
c
n
c
n
c
n
c
current_user
@current_user ||= User.find_by(id: session[:user_id])
User.find_by(id: null)
User.find_by(id: nil)
@current_user
User.find_by(id: session[:user_id])
current_user
current_user.blank?
@current_user.blank?
@current_user
current_user
@current_user ||= User.find_by(id: session[:user_id])
User.find_by(id: session[:user_id])
current_user.blank?
current_user
@current_user.blank?
@current_user
@current_user ||= User.find_by(id: session[:user_id])
current_user
current_user.blank?
@current_user
@current_user ||= User.find_by(id: session[:user_id])
User.find_by(id: session[:user_id])
User.all.map(&:id)
User.all
User.find_by id: nil
User.find_by user: nil
current_user.blank?
current_user.nil?
current_user
logged_in?
c
current_user
c
session.keys
session.delete [:user_id, :is_admin]
session.delete :user_id, :is_admin
session.keys
session.delete :user_id
session[:user_id]
session[:session_id]
session.keys
session.delete([:user_id, :today_order, :today_order_id, :is_admin])
session.keys
session
c
is_admin?
is_admin>
q
@dishes
@dishes.each{|d| d['price'].gsub!(' VND', '').gsub!(',', '')}
pr.gsub(' VND', '').gsub(',', '')
pr.gsub(' VND', '')
pr.gsub(' VND', ''
pr = @dishes.first['price']
pr = @dishes.first[:price]
pr = @dishes.first.price
pr = @dishes.first
@dishes.length
@dishes
n
q
@dishes
n
q
res_url
full_urls
q
full_urls
n
URI(res_url).host.include? THUAN_KIEU_HOST
URI(res_url).host
c
unordered_users.length
unordered_users
ordered_users
User.all.length
unordered_users
ordered_users.first.slack_name
ordered_users.first
ordered_users
c
fail_list
success_list
c
slack_names.map!{|name| '@' + name}
slack_names
get_notifier.post text: "Please go [here](#{ORDER_LUNCH_LINK}) to order lunch for today. Thank you.", channel: slack_names
get_notifier.post text: "Please go [here](#{ORDER_LUNCH_LINK}) to order lunch for today. Thank you.", channel:
slack_names
c
valid_params[:password].blank?
c
vp[:old_password]
vp
vp = params.require(:user).permit(:old_password, :password)
vp = arams.require(:user).permit(:old_password, :password)
u.authenticate params[:user][:old_password] + 'dsjkhdfs'
u.authenticate params[:user][:old_password]
u.authenticated? params[:user][:old_password]
u = User.find id
id = params[:id]
params
c
Dish.last
c
d.image_logo.url
d.image_logo
d = Dish.last
frame
d.restaurant
d = Dish.find 250
adish.errors.messages
adish.valid?
adish
n
adish.image_logo
adish.errors.messages
adish.valid?
adish
n
Dish.last
n
dish
s
c
@dishes
n
c
@dishes
n
c
n
c
n
c
a['thumb']
a['another_info']
n
c
a['another_info']
a['thumb']
n
c
a['another_info']
a['thumb']
n
c
a['thumb']
a
c
n
c
full_url
c
n
c
a
n
c
a
c
thumb './/'
thumb 'css=img'
thumb 'css=.img'
thumb 'img'
thumb 'css=.img-box'
thumb xpath: "//img"
thumb xpath: "//img/@src"
thumb xpath: ".//img/@href"
thumb xpath: ".//img/@src"
thumb xpath: ".//img/@ng-src"
n
c
a['dishes']
n
c
a['dishes']
@dishesa
@dishes
n
c
URI(res_url).host.eql? FOODY_HOST
c
URI(res_url).host.eql? FOODY_HOST
URI(res_url).host.equal? FOODY_HOST
c
URI(res_url).host.equal? FOODY_HOST
FOODY_HOST
URI(res_url).host
c
@restaurant.ref_link.blank?
@restaurant.ref_link
c
params
c
params
c
params
c
params
scrap_params
c
url
path
base_url 1
base_url 0
base_url
url
c
a['dishes']
c
a['dishes']
c
a['dishes']
c
a['dishes']
c
a['dish']
a
c
a
c
a
c
a
c
a
c
Wombat.crawl
repositories
c
a['another_info'].class
a['some_data']
a
a[:another_info]
a[:some_data]
a[:some_date]
c
a
c
some_data
some_date
