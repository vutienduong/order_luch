c
MyError::CreateFailError.new @menu.errors.messages.to_s
MyError::CreateFailError
MyError::CreateFailError @menu.errors.messages.to_s
@menu.errors.messages.to_s
@menu.save
c
super(:create_fail, 422, msg)
c
raise MyError::CreateFailError
@menu.save
n
@menu.save
unless @menu.save
MyError::CreateFailError
c
MyError::UpdateFailError @menu.errors.messages.to_s
@menu.update(menu_params)
c
a = @menu.errors.messages.to_s
a = @menu.errors.messages
a
a = @menu.errors
a = @menu.errors.message
a.values.first.first
a.values.first
a.values
a.keys
a.key
a = @menu.errors.messages
@menu.errors.messages
@menu.update(menu_params)
@menu.errors.messages
c
raise UpdateFailError @menu.errors.messages
@menu.update(menu_params)
c
@menu.errors.messages
@menu.update(menu_params)
c
@msg
@message
@status
@error
c
n
shn
c
up
upu
up
n
c
n
klass.name
n
s
n
block
nlock
n
klasses
options
n
options
s
c
Rails.root.join('public', _status.to_s)
s
c
s
c
n
s
c
n
c
n
c
raise Error::CustomError unless @user
clear
c
config.root
c
include MyTestHandler
c
include ErrorsHelper
include Error
c
include ErrorHandler
include lib/Error::ErrorHandler
c
include lib/Error::ErrorHandler
include ErrorHandler
include Error::ErrorHandler
c
@order
c
session[:today_order][(:id).to_s]
session[:today_order][:id]
session[:today_order]
order_id
params[:dish][:dish_id]
@order_dishes
c
@order = Order.where('DATE(date)=?', Date.today).where('user_id = ?', session[:user_id])
Order.where("date LIKE '%#{Date.today}%'")
Order.where("date LIKE '%#{Date.today}'")
Order.where('date LIKE ?', Date.today)
Order.where('date LIKE %?%', Date.today)
Order.where('date LIKE \'%?%\'', Date.today).all
Order.where('date LIKE \'%?%\'', Date.today)
Order.where('date LIKE \'%2017-11-14%\'')
Order.last
Date.today
Order.find_by(date: Date.today)
c
Order.find_by(date: Date.today)
Order.find_by(user_id: 8, date: Date.today)
order_params
@order
n
c
session[:today_order]
c
session[:today_order]
c
o.cal_total_price.to_f
o.cal_total_price
o = Order.last
c
@order.save
n
@today_order
c
User.find_by username: 'ngoc'
Date.today
Order.find_by(user_id: 9).dishes.map(&:name)
Order.find_by(user_id: 9)
User.find session[:user_id]
Order.find_by(user_id: session[:user_id], date: Date.today)
session[:user_id]
@today_order = Order.where('user_id = ? AND date = ?', session[:user_id], Date.today).first
@today_order
n
@menu.restaurants.map(&:name)
@menu.restaurants.map(&:name_
c
session[:today_order]
n
c
@menu.first
@menu.length
@menu
@menu.length
c
save_and_open_page
c
User.find(normal_user.id).admin
User.find(normal_user.id).admin?
click_button 'Update User'
check 'user[admin]'
check 'Is admin?'
(find_field 'user[admin]').value
c
(find_field 'user[admin]').value
find_field 'user[admin]'
save_and_open_page
find(:css, "#user_admin[value='1']")[:value]
find(:css, "#user_admin[value='1']").value
find(:css, "#user_admin[value='1']")
c
quit
session[:user_id].class
session[:user_id]
editted_user_id
c
session[:user_id]
editted_user_id
c
quit
page.current_path
save_and_open_page
c
quit
save_and_open_page
click_button 'Update User'
page.find_field( 'user[password]').value
page.find_field( 'user[password]').text
page.find_field 'user[password]'
page.find_field 'user[password]
fill_in 'Password', with: new_pass
quit
dish_2_1
n%3 + 1
n/3 + 1
save_and_open_page
c
save_and_open_page
c
save_and_open_page
post "/admin/dishes/", { dish: dish_attrs }
post "admin/dishes/", { dish: dish_attrs }
post "/dishes", { dish: dish_attrs }
post "dishes", { dish: dish_attrs }
dish_attrs
c
quit
Order.where('user_id = ?', user_1.id).length
Order.where('user_id = ?', user_1.id)
quit
save_and_open_page
c
quit
save_and_open_page
tr.text()
tr
tr.all('td').first
tr.all('td').first[:text]
tr.all('td').first.text()
tr.text()
quit
Order.find(order_1.id).dishes.map(&:name)
Order.find(order_1.id)
order_2.dishes.map(&:name)
order_1.dishes.map(&:name)
_.map(&:name)
order_1.dishes
page.all('td a').first.click
page.all('td a').length
quit
order_1.id
user_1.username
Order.all.map(&:id)
save_and_open_page
page.all('td a').first.click
page.all('td a').length
page.all('td a')
save_and_open_page
page.execute_script('$(".btn btn-primary glyphicon glyphicon-copy").closest("div")')
quit
page.all(:css, ".btn.btn-primary.glyphicon.glyphicon-copy").last.click
save_and_open_page
page.all(:css, ".btn.btn-primary.glyphicon.glyphicon-copy").first.click
page.all(:css, ".btn.btn-primary.glyphicon.glyphicon-copy")
page.find(:css, ".btn.btn-primary.glyphicon.glyphicon-copy")
page.find(:css, ".btn.btn-primary")
page.all('.btn')[2][:class]
page.all('.btn')[1][:class]
page.all('.btn')[1][:text]
page.find("a[href^=/#{copy_order_user_path(order_1)}/")
page.find("a[href^=\#{copy_order_user_path(order_1)}\")
page.find("a[href^=#{copy_order_user_path(order_1)}")
page.find_link('', href: copy_order_user_path(order_1))
page.find('.btn btn-primary glyphicon glyphicon-copy')
page.all('.btn')[3][:text]
